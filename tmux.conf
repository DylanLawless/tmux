# tmux config file
# Set to copy to system clipboard - usefull for copying between windows for vim
# this will allow copy paste with ctrl-V wrather using P in vim
# bind-key -n C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Allow vi mode keys and copy to clipboard
set-window-option -g mode-keys vi
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy -in -selection clipboard'
# Then hit Ctrl+b [ to enter copy mode. 
# Then hit Space followed by whatever vi movement keys to make a selection. 
# Then, instead of hitting Enter, hit y and the selection will be copied to the clipboard.
# For OSX, replace xclip with pbcopy.

# set status bar style
set -g status-left-length 32
set -g status-right-length 150

# centre window list for clarity
set -g status-justify centre

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg yellow #yellow
set-option -g status-style dim 
    # changed after update
    # set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=brightblue #base0
set-window-option -g window-status-style bg=colour236
set-window-option -g window-status-style dim
    # set-window-option -g window-status-fg brightblue #base0
    # set-window-option -g window-status-bg colour236
    # set-window-option -g window-status-attr dim

set-window-option -g window-status-current-style fg=brightred #orange
set-window-option -g window-status-current-style bg=colour236
set-window-option -g window-status-current-style bright
    # set-window-option -g window-status-current-fg brightred #orange
    # set-window-option -g window-status-current-bg colour236
    # set-window-option -g window-status-current-attr bright

# By default you enter tmux’s command mode by using a keyboard sequence 
# called the prefix shortcut (by default Ctrl-b).
# This is not efficienct and Ctrl-a is much better.
# On mac you can also change your keyboard to change the cap locks key to be ^Control.
# This is way more useful. Go to System preference / Keyboard / Modifier keys / Caps Lock: ^Control.

# Set prefix to Ctrl-a instead of Ctrl-b
unbind C-b
set -g prefix C-a
bind Space send-prefix


# The following should allow the command key to pass to a remote tmux session via ssh for example
bind-key a send-prefix
# ctrl-a   c  # create new window in the outer session
# ctrl-a a c  # create new window in the inner session
# ctrl-a   %  # create split window in the outer session
# ctrl-a a %  # create split window in the inner session


# Important to note: after you edit the config file, tmux won’t pick up the changes until you manually refresh. To do this: from within a tmux session hit the prefix shortcut, by default Ctrl-b, then type the :source-file command to reload…
# $ :source-file ~/.tmux.conf

# Intuitive split commands
# When I first started using tmux, one of the things I found the most frustrating was remembering how to split the terminal into multiple panels, tmux’s flagstone feature. Mapping horizontal split to –, and vertical split to | is much more intuitive than the default “ and % mapping.

# Split windows using | and -  then also allow it to start the pane using the same working directory
unbind '"'
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Mouse scrolling
# Configuring tmux to use the mouse for scrolling used to be a hassle, but thankfully in tmux 2.0 there is now a single config option to enable mouse mode.
# Mouse mode
set -g mouse on

# 256 colors for vim
set -g default-terminal "screen-256color"

# reload conf and desplay any error
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."
